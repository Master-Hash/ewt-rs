name: Build

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    name: ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - {
              target: x86_64-pc-windows-gnu,
              os: windows-2025,
              feature: icu_segmenter,
            }
          - {
              target: x86_64-pc-windows-gnu,
              os: windows-2025,
              feature: windows,
            }
          - {
              target: x86_64-unknown-linux-gnu,
              os: ubuntu-24.04,
              feature: icu_segmenter,
            }
          - {
              target: aarch64-unknown-linux-gnu,
              os: ubuntu-24.04-arm,
              feature: icu_segmenter,
            }
          - {
              target: x86_64-apple-darwin,
              os: macos-15,
              feature: icu_segmenter,
            }
          - {
              target: aarch64-apple-darwin,
              os: macos-15,
              feature: icu_segmenter,
            }
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.job.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ matrix.job.feature }}

      - name: Show version information (Rust, cargo)
        run: |
          rustup -V
          rustup toolchain list
          rustup target add ${{ matrix.job.target }}
          cargo -V
          rustc -V

      - name: Build
        run: cargo build --locked --release --target=${{ matrix.job.target }} --no-default-features -F ${{ matrix.job.feature }}

      - name: debug?
        if: runner.os == 'Windows' || runner.os == 'Linux'
        run: |
          tree target/

      - name: "Artifact upload"
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.job.target }}-libEWT-${{ matrix.job.feature }}
          path: |
            target/${{ matrix.job.target }}/release/*.dll
            target/${{ matrix.job.target }}/release/*.so
            target/${{ matrix.job.target }}/release/*.dylib
