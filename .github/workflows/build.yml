name: Build

on:
  workflow_dispatch:
  pull_request:
  push:
    tags:
      - "v*.*.*"
    branches:
      - main

jobs:
  build:
    name: ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - {
              target: x86_64-pc-windows-gnu,
              os: windows-2025,
              feature: icu_segmenter,
            }
          - {
              target: x86_64-pc-windows-gnu,
              os: windows-2025,
              feature: windows,
            }
          - {
              target: x86_64-pc-windows-gnullvm,
              os: windows-2025,
              feature: icu_segmenter,
            }
          - {
              target: x86_64-pc-windows-gnullvm,
              os: windows-2025,
              feature: windows,
            }
          - {
              target: aarch64-pc-windows-gnullvm,
              os: windows-2025,
              feature: icu_segmenter,
            }
          - {
              target: aarch64-pc-windows-gnullvm,
              os: windows-2025,
              feature: windows,
            }
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-24.04 }
          - { target: aarch64-unknown-linux-gnu, os: ubuntu-24.04-arm }
          - { target: x86_64-apple-darwin, os: macos-15 }
          - { target: aarch64-apple-darwin, os: macos-15 }
        include:
          - os: windows-2025
            bname: ewt.dll
          - os: ubuntu-24.04
            bname: libewt.so
            feature: icu_segmenter,
          - os: ubuntu-24.04-arm
            bname: libewt.so
            feature: icu_segmenter,
          - os: macos-15
            bname: libewt.dylib
            feature: icu_segmenter,
          - target: x86_64-pc-windows-gnullvm
            msystem: clang64
            BINDGEN_EXTRA_CLANG_ARGS: -I"C:\msys64\clang64\lib\clang\20\include" --target=x86_64-pc-windows-gnu
          - target: aarch64-pc-windows-gnullvm
            msystem: clangarm64
            BINDGEN_EXTRA_CLANG_ARGS: -I"C:\msys64\clangarm64\lib\clang\20\include" --target=aarch64-pc-windows-gnu

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.job.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ matrix.job.feature }}

      - name: Show version information (Rust, cargo)
        run: |
          rustup update
          rustup -V
          rustup toolchain list
          rustup target add ${{ matrix.job.target }}
          cargo -V
          rustc -V

      - uses: msys2/setup-msys2@v2
        # Run only when having msystem variable
        if: ${{ matrix.job.msystem != '' }}
        with:
          msystem: ${{ matrix.job.msystem }}
          pacboy: clang:p

      - name: Build„ÄÅ
        env:
          BINDGEN_EXTRA_CLANG_ARGS: ${{ matrix.job.BINDGEN_EXTRA_CLANG_ARGS || '' }}
        run: cargo build --locked --release --target=${{ matrix.job.target }} --no-default-features -F ${{ matrix.job.feature }}

      - name: "Artifact upload"
        uses: actions/upload-artifact@master
        with:
          name: libewt-${{ matrix.job.feature }}-${{ matrix.job.target }}
          path: |
            target/${{ matrix.job.target }}/release/${{ matrix.job.bname }}

  release:
    name: Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: download

      - name: Create zip files
        run: |
          for f in download/*; do
            7z a -tzip -mx=9 -r ${f}.zip ${f}/*
          done

      - name: Upload release
        run: |
          gh release create "${GITHUB_REF##*/}" download/*.zip -t "${GITHUB_REF##*/}" --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
